# shellcheck shell=bash

# shellcheck disable=SC2154  # variables like ${args} are defined in main script
input_path="${args[input_path]}"
test -f "${input_path}" || panic "File not found: ${input_path}"

output_path="${args[output_path]:-}"

private_key_input="$(cat | tr --delete '[:space:]')"
input_len="${#private_key_input}"

test "${input_len}" -eq 60 || panic "Invalid key format"

version="${private_key_input:0:2}"

test "${version}" = "01" || panic "Key generated by different version of gramps"

age_identity="AGE-SECRET-KEY-1${private_key_input:2:58}"

age_cmd=(
    age --decrypt
    --identity -
)

if [ "${output_path}" != "" ]; then
    test ! -e "${output_path}" || panic "Already exists: ${output_path}"
    age_cmd+=(--output "${output_path}")
fi

age_cmd+=("${input_path}")

process_stderr() {
    # process `age --decrypt` stderr to improve known error messages.
    age_stderr="$(cat)"
    if echo "${age_stderr}" | grep --fixed-strings "age: error: no identity matched any of the recipients" &> /dev/null; then
        panic "Unable to decrypt; perhaps a mistyped key?"
    else
        echo "${age_stderr}" >&2
    fi
}

echo "${age_identity}" | "${age_cmd[@]}" 2> >(process_stderr)
